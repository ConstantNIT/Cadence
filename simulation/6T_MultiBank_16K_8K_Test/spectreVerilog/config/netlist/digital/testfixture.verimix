// Vermix stimulus file.
// Default verimix stimulus. 

integer rLog;
integer wLog;
integer seed;
integer start;
integer i;
reg[11:0] lastWriteAddr;

real rStart;
real rDelay;
real wStart;
real wDelay;


initial
begin 

   seed = 5;
   start = 0;
   rLog=$fopen("/tmp2/16K_mem_RLog.csv");
   $fdisplay(rLog, "R_Address, RData[31:0], total_time(ps), read_delay(ps)");

   wLog=$fopen("/tmp2/16K_mem_WLog.csv"); 
   $fdisplay(wLog, "W_Address, WData[31:0], , total_time(ps), write_delay(ps)");

   R_Address[11:0] = 12'h000;
   ReadEn = 1'b0;
   WData[31:0] = 32'h00000000;
   W_Address[11:0] = 12'h000;
   WriteEn = 1'b0;
#1000;

// Perform Read
   rStart = $time;
   R_Address[11:0] = lastWriteAddr[11:0];
   ReadEn          = 1'b1;
   wait(ReadAck);
   rDelay = $time - rStart;
   $fdisplay(rLog, "%h, %h, %t, %t", R_Address[11:0], RData[31:0], $time, rDelay); 

// Null Read
   rStart = $time;
   ReadEn = 1'b0;
   R_Address[11:0] = 12'h000;
   wait(~ReadAck);
   rDelay = $time - rStart;
   $fdisplay(rLog, "%h, %h, %t, %t", R_Address[11:0], RData[31:0], $time, rDelay); 

// Perform Write
   wStart          = $time;
   WriteEn         = 1'b1;
   WData[31:0]     = $random(seed);
   W_Address[11:0] = 12'h000;
   wait(WriteAck);
   wDelay = $time - wStart;
   $fdisplay(wLog, "%h, %h, %t, %t", W_Address[11:0], WData[31:0], $time, wDelay); 

//Null Write
   WriteEn = 1'b0;
   W_Address[11:0] = 12'h000;
   WData[31:0] = 32'h00000000;
   wait(~WriteAck);
   wDelay = $time - wStart;
   $fdisplay(wLog, "%h, %h, %t, %t", W_Address[11:0], WData[31:0], $time, wDelay); 


// Start reading + writing simultaneously
   WData[31:0] = $random;
   W_Address[11:0] = 12'h000;
   R_Address[11:0] = lastWriteAddr[11:0];
   ReadEn  = 1'b1;
   WriteEn = 1'b1;
   rStart  = $time;
   wStart  = $time;
   start   = 1;
end 


always @(posedge WriteAck) begin
   if (start==1) begin
   	  wDelay = $time - wStart;
   	  $fdisplay(wLog, "%h, %h, %t, %t", W_Address[11:0], WData[31:0], $time, wDelay);
          lastWriteAddr[11:0] <= W_Address[11:0];
   	  WData[31:0] = 32'h00000000;
   	  WriteEn  = 1'b0;  
          wStart   = $time;
   end
end

always @(negedge WriteAck) begin
   if (start==1) begin
   	   wDelay = $time - wStart;
   	   $fdisplay(wLog, "%h, %h, %t, %t", W_Address[11:0], WData[31:0], $time, wDelay);   	   
           WData[31:0]      = $random;
   	   W_Address[11:0]   = $random;

// Check not one of missing banks           
	   if (W_Address[11:10] == 2'b11) begin
               W_Address[11:10] == 2'b01;
	   end
           if (W_Address[11:10] == 2'b10) begin
	       W_Address[11:10] == 2'b00;
           end

           WriteEn   = 1'b1;  
	   wStart    = $time;
   end
end

always @(negedge ReadAck) begin
   if (start==1) begin
   	   rDelay = $time - rStart;
   	   $fdisplay(rLog, "%h, %h, %t, %t", R_Address[11:0], RData[31:0], $time, rDelay);   	   
   	   R_Address[11:0] = lastWriteAddr[11:0];
// Check not same bank
           if (R_Address[11:10] == W_Address[11:10]) begin
	       R_Address[11:10] = ~R_Address[11:10];
           end

// Check not one of missing 2/4 banks
           if (R_Address[11:10] == 2'b11) begin
               R_Address[11:10] == 2'b01;
	   end
           if (R_Address[11:10] == 2'b10) begin
	       R_Address[11:10] == 2'b00;
           end

           ReadEn      = 1'b1;
	   rStart      = $time;
   end
end

always @(posedge ReadAck) begin
   if (start==1) begin
   	   rDelay = $time - rStart;
   	   $fdisplay(rLog, "%h, %h, %t, %t", R_Address[11:0], RData[31:0], $time, rDelay);   	   
           ReadEn         = 1'b0; 
           R_Address[11:0] = 12'h000;
	   rStart        = $time;
   end
end

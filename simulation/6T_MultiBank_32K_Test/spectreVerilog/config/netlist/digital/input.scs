
`timescale 1ps / 1ps

module test;


wire  ReadAck, WriteAck;

reg  ReadEn, WriteEn;

wire [31:0]  WDataAck;
wire [63:0]  RData;

reg [11:0]  W_Address;
reg [11:0]  R_Address;
reg [63:0]  Data1;
integer dc_mode_flag;
integer output_change_count;
integer max_dc_iter;
integer dc_iterations;
time vmx_time_offset;




cdsModule_103 top(RData, ReadAck, WDataAck, WriteAck, Data1, R_Address
     , ReadEn, W_Address, WriteEn); 
 

`define verimix
`ifdef verimix

  //Parasitic Simulation annotate definitions
  `include "annotate_msb"

  //vms and dc iteration loop definitions
  `include "IE.verimix"

  //please enter any additional stimulus in the testfixture.verimix file
  `include "testfixture.verimix"

  //$save_waveform definitions
  `include "saveDefs"

`endif


endmodule 

// Vermix stimulus file.
// Default verimix stimulus. 

integer rLog;
integer wLog;
integer seed;
integer i;
integer start;
reg[11:0] lastWriteAddr;

real rStart;
real rDelay;
real wStart;
real wDelay;


initial
begin
 
   seed = 5;
   start = 0;
   rLog=$fopen("/tmp2/mem32k_RLog.csv");
   $fdisplay(rLog, "R_Addr, R1[63:0], total_time(ps), read_delay(ps)");

   wLog=$fopen("/tmp2/mem32k_WLog.csv"); 
   $fdisplay(wLog, "W_Addr, W1[63:0],  total_time(ps), write_delay(ps)");


   start           = 0
   Data1[63:0] 	   = 0;
   R_Address[11:0] = 0;
   W_Address[11:0] = 0;
   ReadEn 	   = 0;
   WriteEn 	   = 0;
   lastWriteAddr   = 1;
   #1000;
   start = 1;

   start = 1;
   Data1[63:0]     = $random;
   W_Address[11:0] = $random;
   WriteEn 	   = 1;
   wStart           = $time;

   R_Address[11:0] = lastWriteAddr;
   ReadEn 	   = 1;
   rStart          = $time;
end 



always @(posedge WriteAck) begin
   if (start==1) begin
   	  wDelay = $time - wStart;
   	  $fdisplay(wLog, "%h, %h, %t, %t", W_Address, Data1, $time, wDelay);
          lastWriteAddr <= W_Address[11:0];
   	  Data1    = 0;
   	  WriteEn  = 1'b0;  
          wStart   = $time;
   end
end

always @(negedge WriteAck) begin
   if (start==1) begin
   	   wDelay = $time - wStart;
   	   $fdisplay(wLog, "%h, %h, %t, %t", W_Address, Data1, $time, wDelay);   	   
           Data1     = $random;
   	   W_Address = $random;
           WriteEn   = 1'b1;  
	   wStart    = $time;
   end
end

always @(negedge ReadAck) begin
   if (start==1) begin
   	   rDelay = $time - rStart;
   	   $fdisplay(rLog, "%h, %h, %t, %t", R_Address, RData, $time, rDelay);   	   
   	   R_Address = lastWriteAddr;
           if (R_Address[11:9] == W_Address[11:9]) begin
	       R_Address[11:9] = ~R_Address[11:9];
           end
           ReadEn      = 1'b1;
	   rStart      = $time;
   end
end

always @(posedge ReadAck) begin
   if (start==1) begin
   	   rDelay = $time - rStart;
   	   $fdisplay(rLog, "%h, %h, %t, %t", R_Address, RData, $time, rDelay);   	   
           ReadEn         = 1'b0; 
	   rStart        = $time;
   end
end
`define _VMX_SIMULATOR_NAME_ "spectre"
`define _VMX_MAX_DC_ITER_ 0
`define _VMX_DC_INTERVAL_ 0
`include "simOptions.verimix"

// Begin Interface Element Header and Verimix Synchronization task
initial begin
	$vmx_initialize( `_VMX_SIMULATOR_NAME_ , dc_mode_flag);
	$vmx_define_export( test.top.cdsNet1, "99999"); // /~WriteEn
	$vmx_define_export( test.top.cdsbus0[6], "99998"); // /~W_Address<6>
	$vmx_define_export( test.top.cdsbus0[7], "99997"); // /~W_Address<7>
	$vmx_define_export( test.top.cdsbus0[8], "99996"); // /~W_Address<8>
	$vmx_define_export( test.top.cdsbus0[9], "99995"); // /~W_Address<9>
	$vmx_define_export( test.top.cdsbus0[10], "99994"); // /~W_Address<10>
	$vmx_define_export( test.top.cdsbus0[11], "99993"); // /~W_Address<11>
	$vmx_define_export( test.top.cdsbus0[0], "99992"); // /~W_Address<0>
	$vmx_define_export( test.top.cdsNet3, "99991"); // /~ReadEn
	$vmx_define_export( test.top.cdsbus0[1], "99990"); // /~W_Address<1>
	$vmx_define_export( test.top.cdsbus0[2], "99989"); // /~W_Address<2>
	$vmx_define_export( test.top.cdsbus0[3], "99988"); // /~W_Address<3>
	$vmx_define_export( test.top.cdsbus0[4], "99987"); // /~W_Address<4>
	$vmx_define_export( test.top.cdsbus0[5], "99986"); // /~W_Address<5>
	$vmx_define_import( test.top.mixedNet99985, "99985"); // /~RData<13>
	$vmx_define_import( test.top.mixedNet99984, "99984"); // /~RData<14>
	$vmx_define_import( test.top.mixedNet99983, "99983"); // /~RData<15>
	$vmx_define_import( test.top.mixedNet99982, "99982"); // /~RData<16>
	$vmx_define_import( test.top.mixedNet99981, "99981"); // /~RData<17>
	$vmx_define_import( test.top.mixedNet99980, "99980"); // /~RData<18>
	$vmx_define_import( test.top.mixedNet99979, "99979"); // /~RData<19>
	$vmx_define_import( test.top.mixedNet99978, "99978"); // /~RData<20>
	$vmx_define_import( test.top.mixedNet99977, "99977"); // /~RData<21>
	$vmx_define_import( test.top.mixedNet99976, "99976"); // /~RData<22>
	$vmx_define_import( test.top.mixedNet99975, "99975"); // /~RData<23>
	$vmx_define_import( test.top.mixedNet99974, "99974"); // /~RData<24>
	$vmx_define_import( test.top.mixedNet99973, "99973"); // /~RData<25>
	$vmx_define_import( test.top.mixedNet99972, "99972"); // /~RData<26>
	$vmx_define_import( test.top.mixedNet99971, "99971"); // /~RData<27>
	$vmx_define_import( test.top.mixedNet99970, "99970"); // /~RData<28>
	$vmx_define_import( test.top.mixedNet99969, "99969"); // /~RData<29>
	$vmx_define_import( test.top.mixedNet99968, "99968"); // /~RData<30>
	$vmx_define_import( test.top.mixedNet99967, "99967"); // /~RData<31>
	$vmx_define_import( test.top.mixedNet99966, "99966"); // /~RData<32>
	$vmx_define_import( test.top.mixedNet99965, "99965"); // /~RData<33>
	$vmx_define_import( test.top.mixedNet99964, "99964"); // /~RData<34>
	$vmx_define_import( test.top.mixedNet99963, "99963"); // /~RData<35>
	$vmx_define_import( test.top.mixedNet99962, "99962"); // /~RData<36>
	$vmx_define_import( test.top.mixedNet99961, "99961"); // /~RData<37>
	$vmx_define_import( test.top.mixedNet99960, "99960"); // /~RData<38>
	$vmx_define_import( test.top.mixedNet99959, "99959"); // /~RData<39>
	$vmx_define_import( test.top.mixedNet99958, "99958"); // /~RData<40>
	$vmx_define_import( test.top.mixedNet99957, "99957"); // /~RData<41>
	$vmx_define_import( test.top.mixedNet99956, "99956"); // /~RData<42>
	$vmx_define_import( test.top.mixedNet99955, "99955"); // /~RData<43>
	$vmx_define_import( test.top.mixedNet99954, "99954"); // /~RData<44>
	$vmx_define_import( test.top.mixedNet99953, "99953"); // /~RData<45>
	$vmx_define_import( test.top.mixedNet99952, "99952"); // /~RData<46>
	$vmx_define_import( test.top.mixedNet99951, "99951"); // /~RData<47>
	$vmx_define_import( test.top.mixedNet99950, "99950"); // /~RData<48>
	$vmx_define_import( test.top.mixedNet99949, "99949"); // /~RData<49>
	$vmx_define_import( test.top.mixedNet99948, "99948"); // /~RData<50>
	$vmx_define_import( test.top.mixedNet99947, "99947"); // /~RData<51>
	$vmx_define_import( test.top.mixedNet99946, "99946"); // /~RData<52>
	$vmx_define_import( test.top.mixedNet99945, "99945"); // /~RData<53>
	$vmx_define_import( test.top.mixedNet99944, "99944"); // /~RData<54>
	$vmx_define_import( test.top.mixedNet99943, "99943"); // /~RData<55>
	$vmx_define_import( test.top.mixedNet99942, "99942"); // /~RData<56>
	$vmx_define_import( test.top.mixedNet99941, "99941"); // /~RData<57>
	$vmx_define_import( test.top.mixedNet99940, "99940"); // /~RData<58>
	$vmx_define_import( test.top.mixedNet99939, "99939"); // /~RData<59>
	$vmx_define_import( test.top.mixedNet99938, "99938"); // /~RData<60>
	$vmx_define_import( test.top.mixedNet99937, "99937"); // /~RData<61>
	$vmx_define_import( test.top.mixedNet99936, "99936"); // /~RData<62>
	$vmx_define_import( test.top.mixedNet99935, "99935"); // /~RData<63>
	$vmx_define_import( test.top.mixedNet99934, "99934"); // /~RData<0>
	$vmx_define_import( test.top.mixedNet99933, "99933"); // /~WDataAck<9>
	$vmx_define_import( test.top.mixedNet99932, "99932"); // /~WDataAck<10>
	$vmx_define_import( test.top.mixedNet99931, "99931"); // /~WDataAck<11>
	$vmx_define_import( test.top.mixedNet99930, "99930"); // /~WDataAck<12>
	$vmx_define_import( test.top.mixedNet99929, "99929"); // /~WDataAck<13>
	$vmx_define_import( test.top.mixedNet99928, "99928"); // /~WDataAck<14>
	$vmx_define_import( test.top.mixedNet99927, "99927"); // /~WDataAck<15>
	$vmx_define_import( test.top.mixedNet99926, "99926"); // /~WDataAck<16>
	$vmx_define_import( test.top.mixedNet99925, "99925"); // /~WDataAck<17>
	$vmx_define_import( test.top.mixedNet99924, "99924"); // /~WDataAck<18>
	$vmx_define_import( test.top.mixedNet99923, "99923"); // /~WDataAck<19>
	$vmx_define_import( test.top.mixedNet99922, "99922"); // /~WDataAck<20>
	$vmx_define_import( test.top.mixedNet99921, "99921"); // /~WDataAck<21>
	$vmx_define_import( test.top.mixedNet99920, "99920"); // /~WDataAck<22>
	$vmx_define_import( test.top.mixedNet99919, "99919"); // /~WDataAck<23>
	$vmx_define_import( test.top.mixedNet99918, "99918"); // /~WDataAck<24>
	$vmx_define_import( test.top.mixedNet99917, "99917"); // /~WDataAck<25>
	$vmx_define_import( test.top.mixedNet99916, "99916"); // /~WDataAck<26>
	$vmx_define_import( test.top.mixedNet99915, "99915"); // /~WDataAck<27>
	$vmx_define_import( test.top.mixedNet99914, "99914"); // /~WDataAck<28>
	$vmx_define_import( test.top.mixedNet99913, "99913"); // /~RData<6>
	$vmx_define_import( test.top.mixedNet99912, "99912"); // /~RData<7>
	$vmx_define_import( test.top.mixedNet99911, "99911"); // /~RData<8>
	$vmx_define_import( test.top.mixedNet99910, "99910"); // /~RData<9>
	$vmx_define_import( test.top.mixedNet99909, "99909"); // /~RData<10>
	$vmx_define_import( test.top.mixedNet99908, "99908"); // /~RData<11>
	$vmx_define_import( test.top.mixedNet99907, "99907"); // /~RData<12>
	$vmx_define_export( test.top.cdsbus2[56], "99906"); // /~WData<56>
	$vmx_define_export( test.top.cdsbus2[57], "99905"); // /~WData<57>
	$vmx_define_export( test.top.cdsbus2[58], "99904"); // /~WData<58>
	$vmx_define_export( test.top.cdsbus2[59], "99903"); // /~WData<59>
	$vmx_define_export( test.top.cdsbus2[60], "99902"); // /~WData<60>
	$vmx_define_export( test.top.cdsbus2[61], "99901"); // /~WData<61>
	$vmx_define_export( test.top.cdsbus2[62], "99900"); // /~WData<62>
	$vmx_define_export( test.top.cdsbus2[63], "99899"); // /~WData<63>
	$vmx_define_export( test.top.cdsbus3[0], "99898"); // /~R_Address<0>
	$vmx_define_export( test.top.cdsbus3[1], "99897"); // /~R_Address<1>
	$vmx_define_export( test.top.cdsbus3[2], "99896"); // /~R_Address<2>
	$vmx_define_export( test.top.cdsbus3[3], "99895"); // /~R_Address<3>
	$vmx_define_export( test.top.cdsbus3[4], "99894"); // /~R_Address<4>
	$vmx_define_export( test.top.cdsbus3[5], "99893"); // /~R_Address<5>
	$vmx_define_export( test.top.cdsbus3[6], "99892"); // /~R_Address<6>
	$vmx_define_export( test.top.cdsbus3[7], "99891"); // /~R_Address<7>
	$vmx_define_export( test.top.cdsbus3[8], "99890"); // /~R_Address<8>
	$vmx_define_export( test.top.cdsbus3[9], "99889"); // /~R_Address<9>
	$vmx_define_export( test.top.cdsbus3[10], "99888"); // /~R_Address<10>
	$vmx_define_export( test.top.cdsbus3[11], "99887"); // /~R_Address<11>
	$vmx_define_export( test.top.cdsbus2[25], "99886"); // /~WData<25>
	$vmx_define_import( test.top.mixedNet99885, "99885"); // /~RData<3>
	$vmx_define_import( test.top.mixedNet99884, "99884"); // /~RData<5>
	$vmx_define_import( test.top.mixedNet99883, "99883"); // /~RData<1>
	$vmx_define_export( test.top.cdsbus2[24], "99882"); // /~WData<24>
	$vmx_define_export( test.top.cdsbus2[23], "99881"); // /~WData<23>
	$vmx_define_export( test.top.cdsbus2[22], "99880"); // /~WData<22>
	$vmx_define_export( test.top.cdsbus2[21], "99879"); // /~WData<21>
	$vmx_define_export( test.top.cdsbus2[19], "99878"); // /~WData<19>
	$vmx_define_export( test.top.cdsbus2[18], "99877"); // /~WData<18>
	$vmx_define_import( test.top.mixedNet99876, "99876"); // /~RData<4>
	$vmx_define_import( test.top.mixedNet99875, "99875"); // /~RData<2>
	$vmx_define_export( test.top.cdsbus2[26], "99874"); // /~WData<26>
	$vmx_define_export( test.top.cdsbus2[17], "99873"); // /~WData<17>
	$vmx_define_export( test.top.cdsbus2[16], "99872"); // /~WData<16>
	$vmx_define_export( test.top.cdsbus2[55], "99871"); // /~WData<55>
	$vmx_define_export( test.top.cdsbus2[20], "99870"); // /~WData<20>
	$vmx_define_import( test.top.mixedNet99869, "99869"); // /~WDataAck<6>
	$vmx_define_import( test.top.mixedNet99868, "99868"); // /~WDataAck<7>
	$vmx_define_import( test.top.mixedNet99867, "99867"); // /~WDataAck<8>
	$vmx_define_import( test.top.mixedNet99866, "99866"); // /~WDataAck<1>
	$vmx_define_import( test.top.mixedNet99865, "99865"); // /~WDataAck<0>
	$vmx_define_import( test.top.mixedNet99864, "99864"); // /~WDataAck<3>
	$vmx_define_import( test.top.mixedNet99863, "99863"); // /~WDataAck<2>
	$vmx_define_import( test.top.mixedNet99862, "99862"); // /~WDataAck<4>
	$vmx_define_import( test.top.mixedNet99861, "99861"); // /~WDataAck<5>
	$vmx_define_export( test.top.cdsbus2[11], "99860"); // /~WData<11>
	$vmx_define_export( test.top.cdsbus2[12], "99859"); // /~WData<12>
	$vmx_define_export( test.top.cdsbus2[13], "99858"); // /~WData<13>
	$vmx_define_export( test.top.cdsbus2[14], "99857"); // /~WData<14>
	$vmx_define_export( test.top.cdsbus2[15], "99856"); // /~WData<15>
	$vmx_define_export( test.top.cdsbus2[10], "99855"); // /~WData<10>
	$vmx_define_export( test.top.cdsbus2[9], "99854"); // /~WData<9>
	$vmx_define_export( test.top.cdsbus2[4], "99853"); // /~WData<4>
	$vmx_define_export( test.top.cdsbus2[5], "99852"); // /~WData<5>
	$vmx_define_export( test.top.cdsbus2[6], "99851"); // /~WData<6>
	$vmx_define_export( test.top.cdsbus2[7], "99850"); // /~WData<7>
	$vmx_define_export( test.top.cdsbus2[8], "99849"); // /~WData<8>
	$vmx_define_export( test.top.cdsbus2[3], "99848"); // /~WData<3>
	$vmx_define_export( test.top.cdsbus2[45], "99847"); // /~WData<45>
	$vmx_define_export( test.top.cdsbus2[46], "99846"); // /~WData<46>
	$vmx_define_export( test.top.cdsbus2[47], "99845"); // /~WData<47>
	$vmx_define_export( test.top.cdsbus2[48], "99844"); // /~WData<48>
	$vmx_define_export( test.top.cdsbus2[49], "99843"); // /~WData<49>
	$vmx_define_export( test.top.cdsbus2[50], "99842"); // /~WData<50>
	$vmx_define_export( test.top.cdsbus2[51], "99841"); // /~WData<51>
	$vmx_define_export( test.top.cdsbus2[52], "99840"); // /~WData<52>
	$vmx_define_export( test.top.cdsbus2[53], "99839"); // /~WData<53>
	$vmx_define_export( test.top.cdsbus2[54], "99838"); // /~WData<54>
	$vmx_define_export( test.top.cdsbus2[41], "99837"); // /~WData<41>
	$vmx_define_export( test.top.cdsbus2[31], "99836"); // /~WData<31>
	$vmx_define_export( test.top.cdsbus2[30], "99835"); // /~WData<30>
	$vmx_define_export( test.top.cdsbus2[29], "99834"); // /~WData<29>
	$vmx_define_export( test.top.cdsbus2[28], "99833"); // /~WData<28>
	$vmx_define_export( test.top.cdsbus2[27], "99832"); // /~WData<27>
	$vmx_define_export( test.top.cdsbus2[40], "99831"); // /~WData<40>
	$vmx_define_export( test.top.cdsbus2[35], "99830"); // /~WData<35>
	$vmx_define_export( test.top.cdsbus2[36], "99829"); // /~WData<36>
	$vmx_define_export( test.top.cdsbus2[37], "99828"); // /~WData<37>
	$vmx_define_export( test.top.cdsbus2[38], "99827"); // /~WData<38>
	$vmx_define_export( test.top.cdsbus2[39], "99826"); // /~WData<39>
	$vmx_define_export( test.top.cdsbus2[0], "99825"); // /~WData<0>
	$vmx_define_export( test.top.cdsbus2[1], "99824"); // /~WData<1>
	$vmx_define_export( test.top.cdsbus2[2], "99823"); // /~WData<2>
	$vmx_define_export( test.top.cdsbus2[34], "99822"); // /~WData<34>
	$vmx_define_export( test.top.cdsbus2[33], "99821"); // /~WData<33>
	$vmx_define_export( test.top.cdsbus2[32], "99820"); // /~WData<32>
	$vmx_define_export( test.top.cdsbus2[44], "99819"); // /~WData<44>
	$vmx_define_export( test.top.cdsbus2[43], "99818"); // /~WData<43>
	$vmx_define_export( test.top.cdsbus2[42], "99817"); // /~WData<42>
	$vmx_define_import( test.top.mixedNet99816, "99816"); // /~WDataAck<29>
	$vmx_define_import( test.top.mixedNet99815, "99815"); // /~WDataAck<30>
	$vmx_define_import( test.top.mixedNet99814, "99814"); // /~WDataAck<31>
	$vmx_define_import( test.top.mixedNet99813, "99813"); // /~WAck
	$vmx_define_import( test.top.mixedNet99812, "99812"); // /~RAck
	$vmx_end_definition;
	vmx_time_offset = 0;
	max_dc_iter = `_VMX_MAX_DC_ITER_ ;
	dc_mode_flag = 1;
	$vmx_start_sim( `_VMX_SIMULATOR_NAME_ );
	dc_iterations = 0;
	while(dc_mode_flag !=  0)
	begin
		# `_VMX_DC_INTERVAL_ $vmx_do_dc( `_VMX_SIMULATOR_NAME_ ,
output_change_count);
		dc_iterations = (dc_iterations + 1);
		if( (output_change_count == 0) ||  (dc_iterations >= max_dc_iter) )
		begin
			dc_mode_flag = 0;
			vmx_time_offset = $time;
		end
	end
end
// End Interface Element Footer and Verimix Synchronization task
initial begin
end

`include "dataDirPath"
// Begin SST2 Save Waveforms
initial begin
$shm_open(`_VMX_DATA_PATH_);
$shm_probe(test.top.WDataAck[10], test.top.WDataAck[11], test.top.WDataAck[12], test.top.WDataAck[13], test.top.WDataAck[14], test.top.WDataAck[15], test.top.WDataAck[16], test.top.WDataAck[17], test.top.WDataAck[18], test.top.WDataAck[19], test.top.WDataAck[20], test.top.WDataAck[21], test.top.WDataAck[22], test.top.WDataAck[23], test.top.WDataAck[24], test.top.WDataAck[25], test.top.WDataAck[26], test.top.WDataAck[27], test.top.WDataAck[28], test.top.WDataAck[29], test.top.WDataAck[30], test.top.WDataAck[31], test.top.RData[0], test.top.RData[1], test.top.RData[2], test.top.RData[3], test.top.RData[4], test.top.RData[5], test.top.RData[6], test.top.RData[7], test.top.RData[8], test.top.RData[9], test.top.RData[10], test.top.RData[11], test.top.RData[12], test.top.RData[13], test.top.RData[14], test.top.RData[15], test.top.RData[16], test.top.RData[17], test.top.RData[18], test.top.RData[19], test.top.RData[20], test.top.RData[21], test.top.RData[22], test.top.RData[23], test.top.RData[24], test.top.RData[25], 
test.top.RData[26], test.top.RData[27], test.top.RData[28], test.top.RData[29], test.top.RData[30], test.top.RData[31], test.top.Data1[32], test.top.Data1[33], test.top.Data1[34], test.top.Data1[35], test.top.Data1[36], test.top.Data1[37], test.top.Data1[38], test.top.Data1[39], test.top.Data1[40], test.top.Data1[41], test.top.Data1[42], test.top.Data1[43], test.top.Data1[44], test.top.Data1[45], test.top.Data1[46], test.top.Data1[47], test.top.Data1[48], test.top.Data1[49], test.top.Data1[50], test.top.Data1[51], test.top.W_Address[0], test.top.W_Address[1], test.top.W_Address[2], test.top.W_Address[3], test.top.W_Address[4], test.top.W_Address[5], test.top.W_Address[6], test.top.W_Address[7], test.top.W_Address[8], test.top.W_Address[9], test.top.W_Address[10], test.top.W_Address[11], test.top.WriteAck, test.top.WDataAck[0], test.top.WDataAck[1], test.top.WDataAck[2], test.top.WDataAck[3], test.top.WDataAck[4], test.top.WDataAck[5], test.top.WDataAck[6], test.top.WDataAck[7], test.top.WDataAck[8], 
test.top.WDataAck[9], test.top.RData[40], test.top.RData[41], test.top.RData[42], test.top.RData[43], test.top.RData[44], test.top.RData[45], test.top.RData[46], test.top.RData[47], test.top.RData[48], test.top.RData[49], test.top.RData[50], test.top.RData[51], test.top.RData[52], test.top.RData[53], test.top.RData[54], test.top.RData[55], test.top.RData[56], test.top.RData[59], test.top.RData[63], test.top.RData[61], test.top.RData[57], test.top.Data1[52], test.top.Data1[53], test.top.Data1[54], test.top.Data1[55], test.top.Data1[56], test.top.Data1[57], test.top.Data1[58], test.top.Data1[59], test.top.Data1[60], test.top.Data1[61], test.top.Data1[62], test.top.Data1[63], test.top.Data1[16], test.top.Data1[17], test.top.Data1[18], test.top.Data1[19], test.top.Data1[20], test.top.Data1[21], test.top.Data1[22], test.top.Data1[23], test.top.Data1[24], test.top.Data1[25], test.top.Data1[26], test.top.Data1[27], test.top.Data1[28], test.top.Data1[29], test.top.Data1[30], test.top.Data1[31], 
test.top.ReadEn, test.top.ReadAck, test.top.RData[62], test.top.RData[60], test.top.RData[58], test.top.WriteEn, test.top.R_Address[0], test.top.R_Address[1], test.top.R_Address[2], test.top.R_Address[3], test.top.R_Address[4], test.top.R_Address[5], test.top.R_Address[6], test.top.R_Address[7], test.top.R_Address[8], test.top.R_Address[9], test.top.R_Address[10], test.top.R_Address[11], test.top.Data1[0], test.top.Data1[1], test.top.Data1[2], test.top.Data1[3], test.top.Data1[4], test.top.Data1[5], test.top.Data1[6], test.top.Data1[7], test.top.Data1[8], test.top.Data1[9], test.top.Data1[10], test.top.Data1[11], test.top.Data1[12], test.top.Data1[13], test.top.Data1[14], test.top.Data1[15], test.top.RData[32], test.top.RData[33], test.top.RData[34], test.top.RData[35], test.top.RData[36], test.top.RData[37], test.top.RData[38], test.top.RData[39], test.top.WDataAck[31:0], test.top.Data1[63:0], test.top.R_Address[11:0], test.top.W_Address[11:0], test.top.RData[63:0]);
end
// End SST2 Save Waveforms
// Library - 16nm_Tests, Cell - 6T_MultiBank_32K_Test, View - schematic
// LAST TIME SAVED: Mar  6 06:11:57 2015
// NETLIST TIME: Mar  7 01:02:11 2015
`timescale 1ps / 1ps 

module cdsModule_103 ( RData, ReadAck, WDataAck, WriteAck, Data1,
     R_Address, ReadEn, W_Address, WriteEn );

output  ReadAck, WriteAck;

input  ReadEn, WriteEn;

output [31:0]  WDataAck;
output [63:0]  RData;

input [11:0]  W_Address;
input [11:0]  R_Address;
input [63:0]  Data1;

// Buses in the design

wire  [11:0]  cdsbus0;

wire  [11:0]  R_AddressT;

wire  [31:0]  WDataAckT;

wire  [63:0]  cdsbus1;

wire  [11:0]  W_AddressT;

wire  [63:0]  cdsbus2;

wire  [11:0]  cdsbus3;

wire  [63:0]  RDataT;

wire  [63:0]  WDataT;

wire  [31:0]  cdsbus4;

// begin interface element definitions

wire cdsNet2;
wire cdsNet0;
reg mixedNet99985;
reg mixedNet99984;
reg mixedNet99983;
reg mixedNet99982;
reg mixedNet99981;
reg mixedNet99980;
reg mixedNet99979;
reg mixedNet99978;
reg mixedNet99977;
reg mixedNet99976;
reg mixedNet99975;
reg mixedNet99974;
reg mixedNet99973;
reg mixedNet99972;
reg mixedNet99971;
reg mixedNet99970;
reg mixedNet99969;
reg mixedNet99968;
reg mixedNet99967;
reg mixedNet99966;
reg mixedNet99965;
reg mixedNet99964;
reg mixedNet99963;
reg mixedNet99962;
reg mixedNet99961;
reg mixedNet99960;
reg mixedNet99959;
reg mixedNet99958;
reg mixedNet99957;
reg mixedNet99956;
reg mixedNet99955;
reg mixedNet99954;
reg mixedNet99953;
reg mixedNet99952;
reg mixedNet99951;
reg mixedNet99950;
reg mixedNet99949;
reg mixedNet99948;
reg mixedNet99947;
reg mixedNet99946;
reg mixedNet99945;
reg mixedNet99944;
reg mixedNet99943;
reg mixedNet99942;
reg mixedNet99941;
reg mixedNet99940;
reg mixedNet99939;
reg mixedNet99938;
reg mixedNet99937;
reg mixedNet99936;
reg mixedNet99935;
reg mixedNet99934;
reg mixedNet99933;
reg mixedNet99932;
reg mixedNet99931;
reg mixedNet99930;
reg mixedNet99929;
reg mixedNet99928;
reg mixedNet99927;
reg mixedNet99926;
reg mixedNet99925;
reg mixedNet99924;
reg mixedNet99923;
reg mixedNet99922;
reg mixedNet99921;
reg mixedNet99920;
reg mixedNet99919;
reg mixedNet99918;
reg mixedNet99917;
reg mixedNet99916;
reg mixedNet99915;
reg mixedNet99914;
reg mixedNet99913;
reg mixedNet99912;
reg mixedNet99911;
reg mixedNet99910;
reg mixedNet99909;
reg mixedNet99908;
reg mixedNet99907;
reg mixedNet99885;
reg mixedNet99884;
reg mixedNet99883;
reg mixedNet99876;
reg mixedNet99875;
reg mixedNet99869;
reg mixedNet99868;
reg mixedNet99867;
reg mixedNet99866;
reg mixedNet99865;
reg mixedNet99864;
reg mixedNet99863;
reg mixedNet99862;
reg mixedNet99861;
reg mixedNet99816;
reg mixedNet99815;
reg mixedNet99814;
reg mixedNet99813;
reg mixedNet99812;
assign cdsbus1[13] = mixedNet99985;
assign cdsbus1[14] = mixedNet99984;
assign cdsbus1[15] = mixedNet99983;
assign cdsbus1[16] = mixedNet99982;
assign cdsbus1[17] = mixedNet99981;
assign cdsbus1[18] = mixedNet99980;
assign cdsbus1[19] = mixedNet99979;
assign cdsbus1[20] = mixedNet99978;
assign cdsbus1[21] = mixedNet99977;
assign cdsbus1[22] = mixedNet99976;
assign cdsbus1[23] = mixedNet99975;
assign cdsbus1[24] = mixedNet99974;
assign cdsbus1[25] = mixedNet99973;
assign cdsbus1[26] = mixedNet99972;
assign cdsbus1[27] = mixedNet99971;
assign cdsbus1[28] = mixedNet99970;
assign cdsbus1[29] = mixedNet99969;
assign cdsbus1[30] = mixedNet99968;
assign cdsbus1[31] = mixedNet99967;
assign cdsbus1[32] = mixedNet99966;
assign cdsbus1[33] = mixedNet99965;
assign cdsbus1[34] = mixedNet99964;
assign cdsbus1[35] = mixedNet99963;
assign cdsbus1[36] = mixedNet99962;
assign cdsbus1[37] = mixedNet99961;
assign cdsbus1[38] = mixedNet99960;
assign cdsbus1[39] = mixedNet99959;
assign cdsbus1[40] = mixedNet99958;
assign cdsbus1[41] = mixedNet99957;
assign cdsbus1[42] = mixedNet99956;
assign cdsbus1[43] = mixedNet99955;
assign cdsbus1[44] = mixedNet99954;
assign cdsbus1[45] = mixedNet99953;
assign cdsbus1[46] = mixedNet99952;
assign cdsbus1[47] = mixedNet99951;
assign cdsbus1[48] = mixedNet99950;
assign cdsbus1[49] = mixedNet99949;
assign cdsbus1[50] = mixedNet99948;
assign cdsbus1[51] = mixedNet99947;
assign cdsbus1[52] = mixedNet99946;
assign cdsbus1[53] = mixedNet99945;
assign cdsbus1[54] = mixedNet99944;
assign cdsbus1[55] = mixedNet99943;
assign cdsbus1[56] = mixedNet99942;
assign cdsbus1[57] = mixedNet99941;
assign cdsbus1[58] = mixedNet99940;
assign cdsbus1[59] = mixedNet99939;
assign cdsbus1[60] = mixedNet99938;
assign cdsbus1[61] = mixedNet99937;
assign cdsbus1[62] = mixedNet99936;
assign cdsbus1[63] = mixedNet99935;
assign cdsbus1[0] = mixedNet99934;
assign cdsbus4[9] = mixedNet99933;
assign cdsbus4[10] = mixedNet99932;
assign cdsbus4[11] = mixedNet99931;
assign cdsbus4[12] = mixedNet99930;
assign cdsbus4[13] = mixedNet99929;
assign cdsbus4[14] = mixedNet99928;
assign cdsbus4[15] = mixedNet99927;
assign cdsbus4[16] = mixedNet99926;
assign cdsbus4[17] = mixedNet99925;
assign cdsbus4[18] = mixedNet99924;
assign cdsbus4[19] = mixedNet99923;
assign cdsbus4[20] = mixedNet99922;
assign cdsbus4[21] = mixedNet99921;
assign cdsbus4[22] = mixedNet99920;
assign cdsbus4[23] = mixedNet99919;
assign cdsbus4[24] = mixedNet99918;
assign cdsbus4[25] = mixedNet99917;
assign cdsbus4[26] = mixedNet99916;
assign cdsbus4[27] = mixedNet99915;
assign cdsbus4[28] = mixedNet99914;
assign cdsbus1[6] = mixedNet99913;
assign cdsbus1[7] = mixedNet99912;
assign cdsbus1[8] = mixedNet99911;
assign cdsbus1[9] = mixedNet99910;
assign cdsbus1[10] = mixedNet99909;
assign cdsbus1[11] = mixedNet99908;
assign cdsbus1[12] = mixedNet99907;
assign cdsbus1[3] = mixedNet99885;
assign cdsbus1[5] = mixedNet99884;
assign cdsbus1[1] = mixedNet99883;
assign cdsbus1[4] = mixedNet99876;
assign cdsbus1[2] = mixedNet99875;
assign cdsbus4[6] = mixedNet99869;
assign cdsbus4[7] = mixedNet99868;
assign cdsbus4[8] = mixedNet99867;
assign cdsbus4[1] = mixedNet99866;
assign cdsbus4[0] = mixedNet99865;
assign cdsbus4[3] = mixedNet99864;
assign cdsbus4[2] = mixedNet99863;
assign cdsbus4[4] = mixedNet99862;
assign cdsbus4[5] = mixedNet99861;
assign cdsbus4[29] = mixedNet99816;
assign cdsbus4[30] = mixedNet99815;
assign cdsbus4[31] = mixedNet99814;
assign cdsNet2 = mixedNet99813;
assign cdsNet0 = mixedNet99812;

// end interface element definitions



specify 
    specparam CDS_LIBNAME  = "16nm_Tests";
    specparam CDS_CELLNAME = "6T_MultiBank_32K_Test";
    specparam CDS_VIEWNAME = "schematic";
endspecify

inv_1xT I12 ( ReadAck, cdsNet0);
inv_1xT I16 ( cdsNet1, WriteEn);
inv_1xT I8_63_ ( RData[63], cdsbus1[63]);
inv_1xT I8_62_ ( RData[62], cdsbus1[62]);
inv_1xT I8_61_ ( RData[61], cdsbus1[61]);
inv_1xT I8_60_ ( RData[60], cdsbus1[60]);
inv_1xT I8_59_ ( RData[59], cdsbus1[59]);
inv_1xT I8_58_ ( RData[58], cdsbus1[58]);
inv_1xT I8_57_ ( RData[57], cdsbus1[57]);
inv_1xT I8_56_ ( RData[56], cdsbus1[56]);
inv_1xT I8_55_ ( RData[55], cdsbus1[55]);
inv_1xT I8_54_ ( RData[54], cdsbus1[54]);
inv_1xT I8_53_ ( RData[53], cdsbus1[53]);
inv_1xT I8_52_ ( RData[52], cdsbus1[52]);
inv_1xT I8_51_ ( RData[51], cdsbus1[51]);
inv_1xT I8_50_ ( RData[50], cdsbus1[50]);
inv_1xT I8_49_ ( RData[49], cdsbus1[49]);
inv_1xT I8_48_ ( RData[48], cdsbus1[48]);
inv_1xT I8_47_ ( RData[47], cdsbus1[47]);
inv_1xT I8_46_ ( RData[46], cdsbus1[46]);
inv_1xT I8_45_ ( RData[45], cdsbus1[45]);
inv_1xT I8_44_ ( RData[44], cdsbus1[44]);
inv_1xT I8_43_ ( RData[43], cdsbus1[43]);
inv_1xT I8_42_ ( RData[42], cdsbus1[42]);
inv_1xT I8_41_ ( RData[41], cdsbus1[41]);
inv_1xT I8_40_ ( RData[40], cdsbus1[40]);
inv_1xT I8_39_ ( RData[39], cdsbus1[39]);
inv_1xT I8_38_ ( RData[38], cdsbus1[38]);
inv_1xT I8_37_ ( RData[37], cdsbus1[37]);
inv_1xT I8_36_ ( RData[36], cdsbus1[36]);
inv_1xT I8_35_ ( RData[35], cdsbus1[35]);
inv_1xT I8_34_ ( RData[34], cdsbus1[34]);
inv_1xT I8_33_ ( RData[33], cdsbus1[33]);
inv_1xT I8_32_ ( RData[32], cdsbus1[32]);
inv_1xT I8_31_ ( RData[31], cdsbus1[31]);
inv_1xT I8_30_ ( RData[30], cdsbus1[30]);
inv_1xT I8_29_ ( RData[29], cdsbus1[29]);
inv_1xT I8_28_ ( RData[28], cdsbus1[28]);
inv_1xT I8_27_ ( RData[27], cdsbus1[27]);
inv_1xT I8_26_ ( RData[26], cdsbus1[26]);
inv_1xT I8_25_ ( RData[25], cdsbus1[25]);
inv_1xT I8_24_ ( RData[24], cdsbus1[24]);
inv_1xT I8_23_ ( RData[23], cdsbus1[23]);
inv_1xT I8_22_ ( RData[22], cdsbus1[22]);
inv_1xT I8_21_ ( RData[21], cdsbus1[21]);
inv_1xT I8_20_ ( RData[20], cdsbus1[20]);
inv_1xT I8_19_ ( RData[19], cdsbus1[19]);
inv_1xT I8_18_ ( RData[18], cdsbus1[18]);
inv_1xT I8_17_ ( RData[17], cdsbus1[17]);
inv_1xT I8_16_ ( RData[16], cdsbus1[16]);
inv_1xT I8_15_ ( RData[15], cdsbus1[15]);
inv_1xT I8_14_ ( RData[14], cdsbus1[14]);
inv_1xT I8_13_ ( RData[13], cdsbus1[13]);
inv_1xT I8_12_ ( RData[12], cdsbus1[12]);
inv_1xT I8_11_ ( RData[11], cdsbus1[11]);
inv_1xT I8_10_ ( RData[10], cdsbus1[10]);
inv_1xT I8_9_ ( RData[9], cdsbus1[9]);
inv_1xT I8_8_ ( RData[8], cdsbus1[8]);
inv_1xT I8_7_ ( RData[7], cdsbus1[7]);
inv_1xT I8_6_ ( RData[6], cdsbus1[6]);
inv_1xT I8_5_ ( RData[5], cdsbus1[5]);
inv_1xT I8_4_ ( RData[4], cdsbus1[4]);
inv_1xT I8_3_ ( RData[3], cdsbus1[3]);
inv_1xT I8_2_ ( RData[2], cdsbus1[2]);
inv_1xT I8_1_ ( RData[1], cdsbus1[1]);
inv_1xT I8_0_ ( RData[0], cdsbus1[0]);
inv_1xT I28_63_ ( cdsbus2[63], Data1[63]);
inv_1xT I28_62_ ( cdsbus2[62], Data1[62]);
inv_1xT I28_61_ ( cdsbus2[61], Data1[61]);
inv_1xT I28_60_ ( cdsbus2[60], Data1[60]);
inv_1xT I28_59_ ( cdsbus2[59], Data1[59]);
inv_1xT I28_58_ ( cdsbus2[58], Data1[58]);
inv_1xT I28_57_ ( cdsbus2[57], Data1[57]);
inv_1xT I28_56_ ( cdsbus2[56], Data1[56]);
inv_1xT I28_55_ ( cdsbus2[55], Data1[55]);
inv_1xT I28_54_ ( cdsbus2[54], Data1[54]);
inv_1xT I28_53_ ( cdsbus2[53], Data1[53]);
inv_1xT I28_52_ ( cdsbus2[52], Data1[52]);
inv_1xT I28_51_ ( cdsbus2[51], Data1[51]);
inv_1xT I28_50_ ( cdsbus2[50], Data1[50]);
inv_1xT I28_49_ ( cdsbus2[49], Data1[49]);
inv_1xT I28_48_ ( cdsbus2[48], Data1[48]);
inv_1xT I28_47_ ( cdsbus2[47], Data1[47]);
inv_1xT I28_46_ ( cdsbus2[46], Data1[46]);
inv_1xT I28_45_ ( cdsbus2[45], Data1[45]);
inv_1xT I28_44_ ( cdsbus2[44], Data1[44]);
inv_1xT I28_43_ ( cdsbus2[43], Data1[43]);
inv_1xT I28_42_ ( cdsbus2[42], Data1[42]);
inv_1xT I28_41_ ( cdsbus2[41], Data1[41]);
inv_1xT I28_40_ ( cdsbus2[40], Data1[40]);
inv_1xT I28_39_ ( cdsbus2[39], Data1[39]);
inv_1xT I28_38_ ( cdsbus2[38], Data1[38]);
inv_1xT I28_37_ ( cdsbus2[37], Data1[37]);
inv_1xT I28_36_ ( cdsbus2[36], Data1[36]);
inv_1xT I28_35_ ( cdsbus2[35], Data1[35]);
inv_1xT I28_34_ ( cdsbus2[34], Data1[34]);
inv_1xT I28_33_ ( cdsbus2[33], Data1[33]);
inv_1xT I28_32_ ( cdsbus2[32], Data1[32]);
inv_1xT I28_31_ ( cdsbus2[31], Data1[31]);
inv_1xT I28_30_ ( cdsbus2[30], Data1[30]);
inv_1xT I28_29_ ( cdsbus2[29], Data1[29]);
inv_1xT I28_28_ ( cdsbus2[28], Data1[28]);
inv_1xT I28_27_ ( cdsbus2[27], Data1[27]);
inv_1xT I28_26_ ( cdsbus2[26], Data1[26]);
inv_1xT I28_25_ ( cdsbus2[25], Data1[25]);
inv_1xT I28_24_ ( cdsbus2[24], Data1[24]);
inv_1xT I28_23_ ( cdsbus2[23], Data1[23]);
inv_1xT I28_22_ ( cdsbus2[22], Data1[22]);
inv_1xT I28_21_ ( cdsbus2[21], Data1[21]);
inv_1xT I28_20_ ( cdsbus2[20], Data1[20]);
inv_1xT I28_19_ ( cdsbus2[19], Data1[19]);
inv_1xT I28_18_ ( cdsbus2[18], Data1[18]);
inv_1xT I28_17_ ( cdsbus2[17], Data1[17]);
inv_1xT I28_16_ ( cdsbus2[16], Data1[16]);
inv_1xT I28_15_ ( cdsbus2[15], Data1[15]);
inv_1xT I28_14_ ( cdsbus2[14], Data1[14]);
inv_1xT I28_13_ ( cdsbus2[13], Data1[13]);
inv_1xT I28_12_ ( cdsbus2[12], Data1[12]);
inv_1xT I28_11_ ( cdsbus2[11], Data1[11]);
inv_1xT I28_10_ ( cdsbus2[10], Data1[10]);
inv_1xT I28_9_ ( cdsbus2[9], Data1[9]);
inv_1xT I28_8_ ( cdsbus2[8], Data1[8]);
inv_1xT I28_7_ ( cdsbus2[7], Data1[7]);
inv_1xT I28_6_ ( cdsbus2[6], Data1[6]);
inv_1xT I28_5_ ( cdsbus2[5], Data1[5]);
inv_1xT I28_4_ ( cdsbus2[4], Data1[4]);
inv_1xT I28_3_ ( cdsbus2[3], Data1[3]);
inv_1xT I28_2_ ( cdsbus2[2], Data1[2]);
inv_1xT I28_1_ ( cdsbus2[1], Data1[1]);
inv_1xT I28_0_ ( cdsbus2[0], Data1[0]);
inv_1xT I15 ( WriteAck, cdsNet2);
inv_1xT I10 ( cdsNet3, ReadEn);
inv_1xT I7_11_ ( cdsbus0[11], W_Address[11]);
inv_1xT I7_10_ ( cdsbus0[10], W_Address[10]);
inv_1xT I7_9_ ( cdsbus0[9], W_Address[9]);
inv_1xT I7_8_ ( cdsbus0[8], W_Address[8]);
inv_1xT I7_7_ ( cdsbus0[7], W_Address[7]);
inv_1xT I7_6_ ( cdsbus0[6], W_Address[6]);
inv_1xT I7_5_ ( cdsbus0[5], W_Address[5]);
inv_1xT I7_4_ ( cdsbus0[4], W_Address[4]);
inv_1xT I7_3_ ( cdsbus0[3], W_Address[3]);
inv_1xT I7_2_ ( cdsbus0[2], W_Address[2]);
inv_1xT I7_1_ ( cdsbus0[1], W_Address[1]);
inv_1xT I7_0_ ( cdsbus0[0], W_Address[0]);
inv_1xT I2_11_ ( cdsbus3[11], R_Address[11]);
inv_1xT I2_10_ ( cdsbus3[10], R_Address[10]);
inv_1xT I2_9_ ( cdsbus3[9], R_Address[9]);
inv_1xT I2_8_ ( cdsbus3[8], R_Address[8]);
inv_1xT I2_7_ ( cdsbus3[7], R_Address[7]);
inv_1xT I2_6_ ( cdsbus3[6], R_Address[6]);
inv_1xT I2_5_ ( cdsbus3[5], R_Address[5]);
inv_1xT I2_4_ ( cdsbus3[4], R_Address[4]);
inv_1xT I2_3_ ( cdsbus3[3], R_Address[3]);
inv_1xT I2_2_ ( cdsbus3[2], R_Address[2]);
inv_1xT I2_1_ ( cdsbus3[1], R_Address[1]);
inv_1xT I2_0_ ( cdsbus3[0], R_Address[0]);
inv_1xT I25_31_ ( WDataAck[31], cdsbus4[31]);
inv_1xT I25_30_ ( WDataAck[30], cdsbus4[30]);
inv_1xT I25_29_ ( WDataAck[29], cdsbus4[29]);
inv_1xT I25_28_ ( WDataAck[28], cdsbus4[28]);
inv_1xT I25_27_ ( WDataAck[27], cdsbus4[27]);
inv_1xT I25_26_ ( WDataAck[26], cdsbus4[26]);
inv_1xT I25_25_ ( WDataAck[25], cdsbus4[25]);
inv_1xT I25_24_ ( WDataAck[24], cdsbus4[24]);
inv_1xT I25_23_ ( WDataAck[23], cdsbus4[23]);
inv_1xT I25_22_ ( WDataAck[22], cdsbus4[22]);
inv_1xT I25_21_ ( WDataAck[21], cdsbus4[21]);
inv_1xT I25_20_ ( WDataAck[20], cdsbus4[20]);
inv_1xT I25_19_ ( WDataAck[19], cdsbus4[19]);
inv_1xT I25_18_ ( WDataAck[18], cdsbus4[18]);
inv_1xT I25_17_ ( WDataAck[17], cdsbus4[17]);
inv_1xT I25_16_ ( WDataAck[16], cdsbus4[16]);
inv_1xT I25_15_ ( WDataAck[15], cdsbus4[15]);
inv_1xT I25_14_ ( WDataAck[14], cdsbus4[14]);
inv_1xT I25_13_ ( WDataAck[13], cdsbus4[13]);
inv_1xT I25_12_ ( WDataAck[12], cdsbus4[12]);
inv_1xT I25_11_ ( WDataAck[11], cdsbus4[11]);
inv_1xT I25_10_ ( WDataAck[10], cdsbus4[10]);
inv_1xT I25_9_ ( WDataAck[9], cdsbus4[9]);
inv_1xT I25_8_ ( WDataAck[8], cdsbus4[8]);
inv_1xT I25_7_ ( WDataAck[7], cdsbus4[7]);
inv_1xT I25_6_ ( WDataAck[6], cdsbus4[6]);
inv_1xT I25_5_ ( WDataAck[5], cdsbus4[5]);
inv_1xT I25_4_ ( WDataAck[4], cdsbus4[4]);
inv_1xT I25_3_ ( WDataAck[3], cdsbus4[3]);
inv_1xT I25_2_ ( WDataAck[2], cdsbus4[2]);
inv_1xT I25_1_ ( WDataAck[1], cdsbus4[1]);
inv_1xT I25_0_ ( WDataAck[0], cdsbus4[0]);

endmodule

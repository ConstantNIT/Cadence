upgradeMsgSevError ""
vlogSupply1Sigs ""
ossEscNameMapping t
emh_DigitalInstList nil
useFileUselib t
vlogGroundSigs "gnd!"
netlistNoWarn ""
aliasInstFormat "ams_alias_inst_%i"
preferMEOverImplicit t
vlogSupply0Sigs ""
amsExcludeParams ""
emh_maskLayoutView t
useUselibForSpice nil
desVarsToBeNetlistedAsInt ""
emh_phyCell ""
amsmaxErrors "50"
useSpectreInfo "spectre veriloga spice"
emh_printPhysicalInst nil
amsExpScalingFactor "no"
verboseShadowLog nil
amsVerbose nil
emh_printEmptySubckt t
emh_digNetlistFile "digital.v"
emh_PrintPwrGndConnectivity nil
amsPortConnectionByNameOrOrder "name"
emh_macroLibList ""
amsTraverseConfigForTextViews t
forceCleanTempDirForShadow nil
includeInstCdfParams nil
updateShadow nil
templateFile ""
checkForMissingShadows nil
unquoteNumbers t
allowDeviantBuses "yes"
amsTempDirForShadows ""
amsScalarInstances t
allowNameCollisions "yes"
allowIllegalIdentifiers "yes"
amsVerilogHonorSmForLeaf nil
amsLSB_MSB nil
allowSparseBuses "yes"
useDefparam nil
ifdefLanguageExtensions nil
splitNetlistFormat nil
amsDefinitionViews "symbol schematic extracted"
globalSignals nil
includeFiles "disciplines.vams userDisciplines.vams"
paramDefVals ""
upgradeMsgSevWarn ""
paramGlobalDefVal "0"
iterInstExpFormat "%b_%i"
instClashFormat "%b_instclash"
useEffectiveCDF nil
modifyParamScope "no"
print_control_vars t
netlistMaxWarn ""
headerText "none"
netClashFormat "%b_netclash"
initFile ""
useRunDirNetlistsOnly t
templateScript ""

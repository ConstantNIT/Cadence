iterInstExpFormat "%b_%i"
upgradeMsgSevWarn ""
amsExpScalingFactor "no"
amsDefinitionViews "symbol schematic extracted"
amsVerbose nil
splitNetlistFormat nil
netClashFormat "%b_netclash"
print_control_vars t
netlistMaxWarn ""
initFile ""
useEffectiveCDF nil
instClashFormat "%b_instclash"
unquoteNumbers t
checkForMissingShadows nil
includeInstCdfParams nil
updateShadow nil
forceCleanTempDirForShadow nil
amsLSB_MSB nil
amsVerilogHonorSmForLeaf nil
amsScalarInstances t
amsTempDirForShadows ""
useDefparam nil
ifdefLanguageExtensions nil
globalSignals (("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vcc!" "CDBA" "wire" "" "NO" "F" "wire" ""))
emh_printEmptySubckt t
amsmaxErrors "50"
includeFiles "disciplines.vams userDisciplines.vams"
verboseShadowLog nil
paramDefVals ""
useSpectreInfo "spectre veriloga spice"
emh_printPhysicalInst nil
paramGlobalDefVal "0"
useUselibForSpice nil
desVarsToBeNetlistedAsInt ""
emh_phyCell ""
amsTraverseConfigForTextViews t
emh_macroLibList ""
hnlVerilogTermSyncUp nil
modifyParamScope "no"
headerText "none"
amsPortConnectionByNameOrOrder "name"
templateScript ""
emh_digNetlistFile "digital.v"
emh_PrintPwrGndConnectivity nil
useRunDirNetlistsOnly t
useFileUselib t
vlogSupply1Sigs ""
emh_DigitalInstList nil
ossEscNameMapping t
templateFile ""
upgradeMsgSevError ""
vlogGroundSigs "gnd!"
amsExcludeParams ""
allowDeviantBuses "yes"
emh_maskLayoutView t
preferMEOverImplicit t
allowNameCollisions "yes"
allowIllegalIdentifiers "yes"
aliasInstFormat "ams_alias_inst_%i"
vlogSupply0Sigs ""
allowSparseBuses "yes"
netlistNoWarn ""

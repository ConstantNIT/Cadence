upgradeMsgSevWarn ""
amsmaxErrors "50"
upgradeMsgSevError ""
splitNetlistFormat nil
netlistMaxWarn ""
netlistNoWarn ""
templateScript ""
updateShadow nil
forceCleanTempDirForShadow nil
amsTempDirForShadows ""
paramGlobalDefVal "0"
checkForMissingShadows nil
amsLSB_MSB nil
amsScalarInstances t
emh_printEmptySubckt t
emh_printPhysicalInst nil
emh_phyCell ""
emh_macroLibList ""
unquoteNumbers t
useEffectiveCDF nil
emh_PrintPwrGndConnectivity nil
emh_DigitalInstList nil
includeInstCdfParams nil
emh_maskLayoutView t
amsVerilogHonorSmForLeaf nil
emh_digNetlistFile "digital.v"
instClashFormat "%b_instclash"
amsVerbose nil
netClashFormat "%b_netclash"
initFile ""
iterInstExpFormat "%b_%i"
amsExcludeParams ""
useFileUselib t
amsDefinitionViews "symbol schematic extracted"
amsPortConnectionByNameOrOrder "name"
amsTraverseConfigForTextViews t
print_control_vars t
useUselibForSpice nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vcc!" "CDBA" "wire" "" "NO" "F" "wire" ""))
useSpectreInfo "spectre veriloga spice"
desVarsToBeNetlistedAsInt ""
amsExpScalingFactor "no"
aliasInstFormat "ams_alias_inst_%i"
verboseShadowLog nil
paramDefVals ""
vlogSupply1Sigs ""
useRunDirNetlistsOnly t
includeFiles "disciplines.vams userDisciplines.vams"
vlogGroundSigs "gnd!"
preferMEOverImplicit t
useDefparam nil
ifdefLanguageExtensions nil
vlogSupply0Sigs ""
ossEscNameMapping t
headerText "none"
modifyParamScope "no"
allowSparseBuses "yes"
allowDeviantBuses "yes"
allowNameCollisions "yes"
allowIllegalIdentifiers "yes"
templateFile ""

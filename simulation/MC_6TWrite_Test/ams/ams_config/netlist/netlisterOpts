headerText "none"
amsExcludeParams ""
allowDeviantBuses "yes"
amsVerilogHonorSmForLeaf nil
allowSparseBuses "yes"
templateFile ""
unquoteNumbers t
allowNameCollisions "yes"
allowIllegalIdentifiers "yes"
checkForMissingShadows nil
amsVerbose nil
amsTempDirForShadows ""
amsmaxErrors "50"
hnlVerilogTermSyncUp nil
netlistMaxWarn ""
amsExpScalingFactor "no"
paramGlobalDefVal "0"
splitNetlistFormat nil
forceCleanTempDirForShadow nil
updateShadow nil
ossEscNameMapping t
iterInstExpFormat "%b_%i"
includeFiles "disciplines.vams userDisciplines.vams"
emh_maskLayoutView t
preferMEOverImplicit t
paramDefVals ""
globalSignals (("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vcc!" "CDBA" "wire" "" "NO" "F" "wire" ""))
upgradeMsgSevError ""
vlogSupply0Sigs ""
instClashFormat "%b_instclash"
upgradeMsgSevWarn ""
vlogGroundSigs "gnd!"
aliasInstFormat "ams_alias_inst_%i"
useDefparam nil
ifdefLanguageExtensions nil
netlistNoWarn ""
vlogSupply1Sigs ""
amsDefinitionViews "symbol schematic extracted"
desVarsToBeNetlistedAsInt ""
emh_printEmptySubckt t
emh_macroLibList ""
modifyParamScope "no"
netClashFormat "%b_netclash"
useSpectreInfo "spectre veriloga spice"
emh_DigitalInstList nil
emh_printPhysicalInst nil
useEffectiveCDF nil
emh_PrintPwrGndConnectivity nil
amsTraverseConfigForTextViews t
includeInstCdfParams nil
verboseShadowLog nil
emh_digNetlistFile "digital.v"
initFile ""
useFileUselib t
amsScalarInstances t
amsLSB_MSB nil
useUselibForSpice nil
amsPortConnectionByNameOrOrder "name"
emh_phyCell ""
templateScript ""
useRunDirNetlistsOnly t
print_control_vars t

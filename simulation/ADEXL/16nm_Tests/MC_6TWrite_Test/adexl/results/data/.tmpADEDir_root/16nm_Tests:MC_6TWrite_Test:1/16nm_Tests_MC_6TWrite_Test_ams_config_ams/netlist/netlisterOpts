paramGlobalDefVal "0"
amsScalarInstances t
paramDefVals ""
amsTempDirForShadows ""
amsLSB_MSB nil
templateScript ""
includeFiles "disciplines.vams userDisciplines.vams"
useDefparam nil
ifdefLanguageExtensions nil
amsVerilogHonorSmForLeaf nil
headerText "none"
amsmaxErrors "50"
includeInstCdfParams nil
updateShadow nil
hnlVerilogTermSyncUp nil
modifyParamScope "no"
forceCleanTempDirForShadow nil
unquoteNumbers t
checkForMissingShadows nil
useEffectiveCDF nil
allowNameCollisions "yes"
allowIllegalIdentifiers "yes"
instClashFormat "%b_instclash"
allowDeviantBuses "yes"
netClashFormat "%b_netclash"
allowSparseBuses "yes"
initFile ""
useRunDirNetlistsOnly t
print_control_vars t
netlistMaxWarn ""
amsDefinitionViews "symbol schematic extracted"
splitNetlistFormat nil
iterInstExpFormat "%b_%i"
globalSignals (("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vcc!" "CDBA" "wire" "" "NO" "F" "wire" ""))
upgradeMsgSevWarn ""
templateFile ""
aliasInstFormat "ams_alias_inst_%i"
netlistNoWarn ""
amsExcludeParams ""
emh_maskLayoutView t
preferMEOverImplicit t
vlogSupply0Sigs ""
ossEscNameMapping t
upgradeMsgSevError ""
vlogSupply1Sigs ""
amsVerbose nil
useFileUselib t
vlogGroundSigs "gnd!"
amsExpScalingFactor "no"
emh_DigitalInstList nil
amsPortConnectionByNameOrOrder "name"
emh_digNetlistFile "digital.v"
emh_PrintPwrGndConnectivity nil
amsTraverseConfigForTextViews t
emh_macroLibList ""
useSpectreInfo "spectre veriloga spice"
emh_printPhysicalInst nil
useUselibForSpice nil
desVarsToBeNetlistedAsInt ""
emh_phyCell ""
emh_printEmptySubckt t
verboseShadowLog nil

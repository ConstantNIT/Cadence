useEffectiveCDF nil
splitNetlistFormat nil
forceCleanTempDirForShadow nil
verboseShadowLog nil
includeInstCdfParams nil
netlistMaxWarn ""
templateScript ""
amsTraverseConfigForTextViews t
netClashFormat "%b_netclash"
amsDefinitionViews "symbol schematic extracted"
useSpectreInfo "spectre veriloga spice"
checkForMissingShadows nil
instClashFormat "%b_instclash"
updateShadow nil
desVarsToBeNetlistedAsInt ""
aliasInstFormat "ams_alias_inst_%i"
iterInstExpFormat "%b_%i"
amsTempDirForShadows ""
ossEscNameMapping t
preferMEOverImplicit t
paramGlobalDefVal "0"
amsmaxErrors "50"
amsLSB_MSB nil
useFileUselib t
useUselibForSpice nil
amsExcludeParams ""
amsScalarInstances t
amsPortConnectionByNameOrOrder "name"
unquoteNumbers t
modifyParamScope "no"
amsExpScalingFactor "no"
amsVerilogHonorSmForLeaf nil
print_control_vars t
includeFiles "disciplines.vams userDisciplines.vams"
paramDefVals ""
amsVerbose nil
vlogSupply0Sigs ""
vlogGroundSigs "gnd!"
emh_phyCell ""
useDefparam nil
ifdefLanguageExtensions nil
globalSignals (("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vcc!" "CDBA" "wire" "" "NO" "F" "wire" ""))
vlogSupply1Sigs ""
allowDeviantBuses "yes"
emh_printPhysicalInst nil
allowSparseBuses "yes"
templateFile ""
emh_printEmptySubckt t
emh_macroLibList ""
useRunDirNetlistsOnly t
emh_digNetlistFile "digital.v"
allowNameCollisions "yes"
allowIllegalIdentifiers "yes"
emh_DigitalInstList nil
emh_PrintPwrGndConnectivity nil
initFile ""
upgradeMsgSevError ""
hnlVerilogTermSyncUp nil
emh_maskLayoutView t
netlistNoWarn ""
headerText "none"
upgradeMsgSevWarn ""
